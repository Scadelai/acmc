# Binary representation of simple.asm
# Format: [31:26] OPCODE | [25:20] RS | [19:14] RT | [13:8] RD | [7:0] IMEDIATO/ENDEREÃ‡O
# Architecture: Custom MIPS with 64 registers, 32-bit instructions
# Special Registers: R0=zero, R31=return, R62=LO, R63=HI, R30=stack

# Address 0: j 1
# OPCODE=011100 (j), ADDR=1
011100 000000 000000 000000 00 000001

# Address 1: 1-addi r30 r30 3
# OPCODE=001111 (addi), RS=R30, RT=R30, IMM=3
001111 011110 011110 000000 00 000011

# Address 2: 2-sw r31 r30 1
# OPCODE=011010 (sw), RS=R30, RT=R31, IMM=1
011010 011110 011111 000000 00 000001

# Address 3: 3-input r28
# OPCODE=100010 (input), RS=R0, RT=R0, RD=R28
100010 000000 000000 011100 00 000000

# Address 4: 4-move r4 r28
# OPCODE=001011 (move), RS=R28, RT=R0, RD=R4
001011 011100 000000 000100 00 000000

# Address 5: 5-sw r4 r30 2
# OPCODE=011010 (sw), RS=R30, RT=R4, IMM=2
011010 011110 000100 000000 00 000010

# Address 6: 6-lw r30 r4 2
# OPCODE=011001 (lw), RS=R4, RT=R30, IMM=2
011001 000100 011110 000000 00 000010

# Address 7: 7-move r1 r4
# OPCODE=001011 (move), RS=R4, RT=R0, RD=R1
001011 000100 000000 000001 00 000000

# Address 8: 8-outputreg r1
# OPCODE=100000 (outputreg), RS=R1, RT=R0, RD=R0
100000 000001 000000 000000 00 000000

# Address 9: 9-lw r30 r31 1
# OPCODE=011001 (lw), RS=R31, RT=R30, IMM=1
011001 011111 011110 000000 00 000001

# Address 10: 10-subi r30 r30 3
# OPCODE=010000 (subi), RS=R30, RT=R30, IMM=3
010000 011110 011110 000000 00 000011

# Address 11: 11-jr r31
# OPCODE=001100 (jr), RS=R31, RT=R0, RD=R0
001100 011111 000000 000000 00 000000

